from fastapi import APIRouter, Request
from telegram_logger import send_telegram_log
from trading import handle_signal  # –û–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏
import json

webhook_router = APIRouter()

SECRET_TOKEN = "sEcr09!@"

@webhook_router.post("/webhook/9f3c7e23da9f49bd84f243acbc2af21a")
async def webhook(request: Request):
    try:
        raw = await request.body()
        text_data = raw.decode("utf-8")

        # –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ—á–∏—Ç–∞—Ç—å JSON –≤—Ä—É—á–Ω—É—é, —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞–ª–æ –ø—Ä–∏ –ø–ª–æ—Ö–æ–º payload
        try:
            data = json.loads(text_data)
        except json.JSONDecodeError as e:
            send_telegram_log(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}\nüì¶ Raw:\n{text_data}")
            return {"status": "invalid json"}

        send_telegram_log(f"üì© Webhook —Å–∏–≥–Ω–∞–ª –æ—Ç TradingView:\n```json\n{text_data}\n```")

        if data.get("token") != SECRET_TOKEN:
            send_telegram_log("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ —Å–∏–≥–Ω–∞–ª–µ")
            return {"status": "unauthorized"}

        signal_ticker = data.get("signal_ticker")
        action = data.get("action")

        if not signal_ticker or not action:
            send_telegram_log("‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç signal_ticker –∏–ª–∏ action")
            return {"status": "invalid payload"}

        result = handle_signal(signal_ticker, action.upper())  # LONG / SHORT
        send_telegram_log(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω —Å–∏–≥–Ω–∞–ª: {signal_ticker} ‚Üí {action.upper()}\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        return {"status": "ok", "result": result}

    except Exception as e:
        send_telegram_log(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:\n{str(e)}")
        return {"status": "error", "detail": str(e)}
