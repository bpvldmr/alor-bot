# webhook.py

import json
from fastapi import APIRouter, Request
from telegram_logger import send_telegram_log
from trading import handle_signal   # —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è

webhook_router = APIRouter()
SECRET_TOKEN = "sEcr09!@"

@webhook_router.post("/webhook/9f3c7e23da9f49bd84f243acbc2af21a")
async def webhook(request: Request):
    # 1. –ß–∏—Ç–∞–µ–º —Å—ã—Ä–æ–π body
    raw = await request.body()
    text = raw.decode("utf-8")

    # 2. –ü–∞—Ä—Å–∏–º JSON –≤—Ä—É—á–Ω—É—é
    try:
        data = json.loads(text)
    except json.JSONDecodeError as e:
        send_telegram_log(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}\n{text}")
        return {"status": "invalid json"}

    # 3. –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π payload
    send_telegram_log(f"üì© –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Ç TradingView:\n```json\n{text}\n```")

    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    if data.get("token") != SECRET_TOKEN:
        send_telegram_log("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ —Å–∏–≥–Ω–∞–ª–µ TradingView")
        return {"status": "unauthorized"}

    # 5. –ë–µ—Ä—ë–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    signal_ticker = data.get("signal_ticker")
    action = data.get("action")
    if not signal_ticker or not action:
        send_telegram_log("‚ö†Ô∏è –û—à–∏–±–∫–∞: signal_ticker –∏–ª–∏ action –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        return {"status": "invalid payload"}

    # 6. –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é!)
    result = handle_signal(signal_ticker, action.upper())  # LONG –∏–ª–∏ SHORT

    # 7. –õ–æ–≥–∏—Ä—É–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    send_telegram_log(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω —Å–∏–≥–Ω–∞–ª: {signal_ticker} ‚Üí {action.upper()}\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    return {"status": "ok", "result": result}
