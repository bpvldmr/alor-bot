from fastapi import APIRouter, Request
from trading import process_signal
from loguru import logger

webhook_router = APIRouter()

# üîê –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
SECRET_TOKEN = "sEcr09!@"

@webhook_router.post("/webhook/9f3c7e23da9f49bd84f243acbc2af21a")
async def webhook(request: Request):
    try:
        data = await request.json()
        signal_ticker = data.get("signal_ticker")
        action = data.get("action")
        token = data.get("token")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞
        if token != SECRET_TOKEN:
            return {"error": "‚õî –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞"}

        if not signal_ticker or not action:
            return {"error": "–ù—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å signal_ticker –∏ action"}

        result = process_signal(signal_ticker, action)
        logger.info(f"–°–∏–≥–Ω–∞–ª: {signal_ticker}, –¥–µ–π—Å—Ç–≤–∏–µ: {action} ‚Üí {result}")
        return result

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        return {"error": str(e)}
