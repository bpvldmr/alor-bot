from fastapi import APIRouter, Request
from telegram_logger import send_telegram_log
from trading import handle_trading_signal

webhook_router = APIRouter()

SECRET_TOKEN = "sEcr09!@"

@webhook_router.post("/webhook/9f3c7e23da9f49bd84f243acbc2af21a")
async def webhook(request: Request):
    try:
        # –ß—Ç–µ–Ω–∏–µ "—Å—ã—Ä—ã—Ö" –¥–∞–Ω–Ω—ã—Ö
        raw_data = await request.body()
        text_data = raw_data.decode("utf-8")

        send_telegram_log(f"üì© –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Ç TradingView:\n```json\n{text_data}\n```")

        data = await request.json()

        if data.get("token") != SECRET_TOKEN:
            send_telegram_log("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ —Å–∏–≥–Ω–∞–ª–µ TradingView")
            return {"status": "unauthorized"}

        signal_ticker = data.get("signal_ticker")
        action = data.get("action")

        if not signal_ticker or not action:
            send_telegram_log("‚ö†Ô∏è –û—à–∏–±–∫–∞: signal_ticker –∏–ª–∏ action –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            return {"status": "invalid payload"}

        await handle_trading_signal(signal_ticker, action)
        send_telegram_log(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω —Å–∏–≥–Ω–∞–ª: {signal_ticker} ‚Üí {action}")
        return {"status": "ok"}

    except Exception as e:
        send_telegram_log(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return {"status": "error", "detail": str(e)}
