from fastapi import FastAPI, APIRouter, Request
from loguru import logger

app = FastAPI()
webhook_router = APIRouter()

# ‚úÖ –¢–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –∑–∞–¥–∞—ë—à—å –¥–ª—è –∑–∞—â–∏—Ç—ã URL
VALID_TOKEN = "sEcr0901A2B3"

@webhook_router.post("/webhook/{token}")
async def webhook(request: Request, token: str):
    if token != VALID_TOKEN:
        logger.warning(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ URL: {token}")
        return {"error": f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ URL: {token}"}

    try:
        data = await request.json()
        signal_ticker = data.get("signal_ticker")
        action = data.get("action")

        if not signal_ticker or not action:
            return {"error": "–ù—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å signal_ticker –∏ action"}

        result = await process_signal(signal_ticker, action)  # ‚úÖ await –¥–ª—è async
        logger.info(f"–°–∏–≥–Ω–∞–ª: {signal_ticker}, –¥–µ–π—Å—Ç–≤–∏–µ: {action} ‚Üí {result}")
        return result

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        return {"error": str(e)}

# ‚úÖ –í–∫–ª—é—á–µ–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ FastAPI
@app.on_event("startup")
async def startup_event():
    scheduler.start()
    logger.info("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –∑–∞–ø—É—â–µ–Ω")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
app.include_router(webhook_router)
