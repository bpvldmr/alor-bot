from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from apscheduler.triggers.interval import IntervalTrigger
from auth import get_access_token
from balance import send_balance_to_telegram
import httpx
from loguru import logger
from trading import enable_trading, disable_trading
from config import BASE_URL, ACCOUNT_ID

# üìä –ó–∞–¥–∞—á–∞: –∑–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
async def scheduled_balance_job():
    try:
        token = get_access_token()
        url = f"{BASE_URL}/md/v2/Clients/MOEX/{ACCOUNT_ID}/summary"
        headers = {
            "Authorization": f"Bearer {token}",
            "Accept": "application/json"
        }

        async with httpx.AsyncClient(timeout=10) as client:
            resp = await client.get(url, headers=headers)
            resp.raise_for_status()
            data = resp.json()
            logger.debug(f"üìä [CRON] –û—Ç–≤–µ—Ç –æ—Ç Alor: {data}")
            await send_balance_to_telegram(data)

    except Exception as e:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–æ—Ç–ø—Ä–∞–≤–∫–µ –±–∞–ª–∞–Ω—Å–∞ –≤ Telegram")

# ‚èπÔ∏è –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–∏
async def scheduled_disable_trading():
    try:
        logger.info("‚èπÔ∏è CRON: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–∏")
        await disable_trading()
    except Exception as e:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏")

# ‚ñ∂Ô∏è –í–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–∏
async def scheduled_enable_trading():
    try:
        logger.info("‚ñ∂Ô∏è CRON: –í–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–∏")
        await enable_trading()
    except Exception as e:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏")

# üîÑ –ü–∏–Ω–≥-–∑–∞–¥–∞—á–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç ‚Äî –¥–µ—Ä–∂–∏—Ç Render –∂–∏–≤—ã–º
async def ping_job():
    logger.info("üîÑ Ping job is alive (Render keep-alive)")

# ‚è± –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
scheduler = AsyncIOScheduler(timezone="Europe/Moscow")

# ‚è∞ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –±–∞–ª–∞–Ω—Å–∞
scheduler.add_job(scheduled_balance_job, CronTrigger(hour=11, minute=0, day_of_week='mon-fri'), id="morning_balance")
scheduler.add_job(scheduled_balance_job, CronTrigger(hour=18, minute=0, day_of_week='mon-fri'), id="evening_balance")

# ‚ñ∂Ô∏è –í–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–∏ –≤ 09:00 –ø–æ –±—É–¥–Ω—è–º
scheduler.add_job(scheduled_enable_trading, CronTrigger(hour=9, minute=0, day_of_week='mon-fri'), id="enable_trading")

# ‚èπÔ∏è –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–∏ –≤ 23:00 –ø–æ –±—É–¥–Ω—è–º
scheduler.add_job(scheduled_disable_trading, CronTrigger(hour=23, minute=0, day_of_week='mon-fri'), id="disable_trading")

# üîÑ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π ping –¥–ª—è Render
scheduler.add_job(ping_job, IntervalTrigger(minutes=5), id="ping_keepalive")
