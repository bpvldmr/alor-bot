import asyncio
from fastapi import FastAPI
from loguru import logger

from webhook import router as webhook_router
from balance import router as balance_router
from auth import get_access_token
from scheduler import scheduler
from telegram_logger import send_telegram_log  # ‚úÖ –¥–æ–±–∞–≤–∏–º –ª–æ–≥ –≤ —Ç–µ–ª–µ–≥—É

app = FastAPI()

# ‚úÖ Root-—ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
@app.get("/")
async def root():
    return {"status": "ok", "message": "üöÄ Alor bot is running"}

# ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤
app.include_router(webhook_router)
app.include_router(balance_router)

# ‚úÖ –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
@app.on_event("startup")
async def on_startup():
    logger.info("üöÄ Bot started")
    await send_telegram_log("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Render")

    try:
        asyncio.create_task(token_refresher())
        logger.info("üîÅ –ó–∞–ø—É—â–µ–Ω —Ü–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ token_refresher: {e}")

    scheduler.start()
    logger.info("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω")

# ‚úÖ –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞
@app.on_event("shutdown")
async def on_shutdown():
    logger.warning("üõë –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É")
    await send_telegram_log("üõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Render")

# ‚úÖ –¶–∏–∫–ª –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è access_token
async def token_refresher():
    while True:
        try:
            get_access_token()
            logger.debug("üîÅ Token refreshed")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
        await asyncio.sleep(1500)  # 25 –º–∏–Ω—É—Ç
