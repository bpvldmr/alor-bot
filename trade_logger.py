import asyncio
from telegram_logger import send_telegram_log
from auth import get_current_balance
from loguru import logger

async def log_trade_result(ticker: str, side: str, qty: int, entry_price: float, exit_price: float):
    try:
        pnl = round((exit_price - entry_price) * qty, 2)
        pct = round((pnl / (entry_price * abs(qty))) * 100, 2) if entry_price != 0 else 0

    new_balance = await get_current_balance()

        emoji = "üü¢" if pnl >= 0 else "üî¥"
        action = "LONG" if qty > 0 else "SHORT"

        await send_telegram_log(
            f"{emoji} –°–¥–µ–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:\n"
            f"–¢–∏–∫–µ—Ä: {ticker}\n"
            f"–î–µ–π—Å—Ç–≤–∏–µ: {action}\n"
            f"–ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã: {abs(qty)}\n"
            f"–í—Ö–æ–¥: {entry_price:.2f} ‚Üí –í—ã—Ö–æ–¥: {exit_price:.2f}\n"
            f"PnL: {pnl:+.2f} —Ä—É–±. ({pct:+.2f}%)\n"
            f"–ë–∞–ª–∞–Ω—Å: {new_balance:.2f} —Ä—É–±."
        )
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ log_trade_result: {e}")
